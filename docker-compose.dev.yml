version: "3.7"

services:
  heart-sms-backend:
    container_name: heart-sms-backend
    image: heartsms/heart-sms-backend:dev
    command: ["npm", "run", "start-dev"]
    restart: always
    depends_on: 
      - heart-sms-db
      - heart-sms-mqtt
    ports:
      # In dev we open this up so the android app (emulator) can get here easily
      - "5000:5000"
    env_file:
      - .db.env.example
      - .api.env.example
  

  # We usually test using heart-sms-web without docker (npm run start-dev)
  heart-sms-web:
   container_name: heart-sms-web
   image: heartsms/heart-sms-web:dev
   init: true
   restart: always
   environment:
     - HEART_API_URL=api.heart.lan
     - HEART_USE_SSL=true
   ports:
     - "127.0.0.1:8081:80"
   env_file: 
     # /config/web-config.json is derived from .api.env
     - .api.env.example

 
  heart-sms-db:
    container_name: heart-sms-db
    image: heartsms/heart-sms-db:dev
    restart: always
    # Uncomment the below lines if you need to access to access the database from the host i.e. for debugging
    ports:
      - "127.0.0.1:5432:5432"
    env_file:
      - .db.env.example
    volumes:
      - db-dev:/var/lib/postgresql/data

  heart-sms-mqtt:
    container_name: heart-sms-mqtt
    image: heartsms/heart-sms-mqtt:dev
    init: true
    restart: always
    environment: 
      # This skips setting up SSL on the broker. Uncomment if you've generated your own certificates
      - DEV_NO_SSL=true
    ports:
      # Uncomment this line for debugging from the host (unencrypted)
      - "127.0.0.1:1883:1883"
      # SSL endpoint is exposed directly
      - "8883:8883"
      # Unsecured websockets will always be local only
      - "127.0.0.1:5050:5050"
    #env_file: 
      # /etc/mosquitto/conf.d/go-auth.conf is derived from .api.env
      # Comment this out during development to allow unencrypted connection between containers on :5000
      #- .api.env
    #volumes:
      #- ./certs:/etc/certs

  heart-sms-push:
    container_name: heart-sms-push
    image: gotify/server
    ports:
      - 8080:80
    environment:
      - GOTIFY_DEFAULTUSER_PASS=onlyfortesting
      - GOTIFY_REGISTRATION=true
    volumes:
      - "./gotify/data:/app/data"
      - "./gotify/config.yml:/app/config.yml"

  caddy:
    image: caddy
    container_name: caddy
    restart: always 
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/data:/data
      - ./caddy/config:/config
      
volumes:
  db-dev:
